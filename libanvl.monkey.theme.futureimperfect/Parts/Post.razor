@implements IMonkeyPage

<article class="post">
    <header>
        @if (Meta is not null)
        {
            <div class="title">
                <h2><a href="@TitleHref">@Meta.Title</a></h2>
                <p>@Meta.SubTitle</p>
            </div>

            @if (Meta is PostMeta PostMeta)
            {
                <div class="meta">
                    <time class="published" datetime="@PostMeta.Date.ToString("O")">@PostMeta.Date.ToLongDateString()</time>

                    @if (PostMeta.Author is not null)
                    {
                        <AuthorTemplate Author="@PostMeta.Author" Context="author">
                            <span class="name">@author.Name</span>
                            @if (author.AvatarUrl is not null)
                            {
                                <img src="@author.AvatarUrl" alt="Author Avatar" />
                            }
                        </AuthorTemplate>
                    }
                </div>
            }
        }
    </header>

    @if (Meta?.FeaturedImage is not null)
    {
        <a href="#" class="image featured"><img src="@Meta.FeaturedImage.Src" alt="@Meta.FeaturedImage.Alt" /></a>
    }

    @ChildContent

    <footer>
        @if (EnableActions)
        {
            <Actions Children="@(new[] { new LargeButtonAction("Continue Reading", TitleHref ?? string.Empty) })" />
        }

        <ul class="stats">
            @foreach (var tag in Meta?.Tags ?? Enumerable.Empty<string>())
            {
                <li><a href="#">@tag</a></li>
            }
            @*
                <li><a href="#" class="icon solid fa-heart">28</a></li>
                <li><a href="#" class="icon solid fa-comment">128</a></li>
            *@
        </ul>
    </footer>
</article>

@code {

    [Parameter] public PageMeta? Meta { get; set; }

    [Parameter] public string? TitleHref { get; set; }

    [Parameter] public bool EnableActions { get; set; } = true;

    [Parameter] public RenderFragment? ChildContent { get; set; }
}
